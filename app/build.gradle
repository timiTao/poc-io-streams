plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id('application')
    id("io.micronaut.application") version "3.1.1"
    id("checkstyle")
    id("jacoco")
}

sourceSets {
    integrationTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }
}

micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("poc.io.streams.*")
        additionalSourceSets.add(sourceSets.getByName("integrationTest"))
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
    maven {
        url "https://jitpack.io"
    }
}

jacocoTestReport {
    reports {
        xml.required = true
    }
}

test {
    finalizedBy jacocoTestReport
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom runtimeOnly
}

tasks.register('integrationTest', Test) {
    description = 'Runs integration tests.'
    group = 'verification'

    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    shouldRunAfter test
}

check.dependsOn integrationTest

dependencies {
    annotationProcessor("io.micronaut.data:micronaut-data-processor")

    runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.75.Final:osx-x86_64")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kafka:micronaut-kafka") {
        exclude group: "org.apache.kafka", module: "kafka-clients"
    }
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.confluent:kafka-json-schema-serializer:6.2.1")
    implementation("org.redisson:redisson:3.17.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.0.1")

    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.assertj:assertj-core:3.21.0")
    testAnnotationProcessor("io.micronaut:micronaut-inject-java")


    integrationTestAnnotationProcessor("io.micronaut:micronaut-inject-java")
    integrationTestRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.7.1")
    integrationTestImplementation("org.junit.jupiter:junit-jupiter-api")
    integrationTestImplementation("io.micronaut.test:micronaut-test-junit5")
    integrationTestImplementation("org.awaitility:awaitility:4.1.1")
    integrationTestImplementation("org.assertj:assertj-core:3.21.0")
    integrationTestImplementation("org.testcontainers:junit-jupiter")
    integrationTestImplementation("org.testcontainers:kafka")
    integrationTestImplementation("org.testcontainers:testcontainers")
    integrationTestImplementation("com.github.tomakehurst:wiremock-jre8:2.32.0")
}

application {
    mainClass = 'poc.io.streams.App'
}

checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}

checkstyleIntegrationTest {
    source ='src/integrationTest/java'
}
