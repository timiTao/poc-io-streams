plugins {
    id("com.github.johnrengelman.shadow") version "7.1.1"
    id('application')
    id("io.micronaut.application") version "3.1.1"
    id("checkstyle")
}


micronaut {
    runtime("netty")
    processing {
        incremental(true)
        annotations("poc.io.streams.*")
    }
}

repositories {
    mavenCentral()
    maven {
        url "https://packages.confluent.io/maven/"
    }
    maven {
        url "https://jitpack.io"
    }
}

dependencies {
    runtimeOnly("io.netty:netty-resolver-dns-native-macos:4.1.75.Final:osx-x86_64")
    runtimeOnly("ch.qos.logback:logback-classic")

    implementation("io.micronaut:micronaut-management")
    implementation("io.micronaut:micronaut-runtime")
    implementation("io.micronaut.kafka:micronaut-kafka") {
        exclude group: "org.apache.kafka", module: "kafka-clients"
    }
    implementation("io.confluent:kafka-json-schema-serializer:6.2.1")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("org.redisson:redisson:3.17.0")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.0.1")

    testImplementation("com.github.tomakehurst:wiremock-jre8:2.32.0")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("org.awaitility:awaitility:4.1.1")
    testImplementation("org.assertj:assertj-core:3.21.0")
    testImplementation("io.projectreactor:reactor-test:3.2.3.RELEASE")
    testImplementation("org.testcontainers:junit-jupiter")
    testImplementation("org.testcontainers:kafka")
    testImplementation("org.testcontainers:testcontainers")
}

application {
    mainClass = 'poc.io.streams.App'
}

checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}
